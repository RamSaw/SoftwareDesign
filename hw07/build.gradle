plugins {
    id 'org.jetbrains.kotlin.jvm' version'1.3.21'
    id 'com.google.protobuf' version '0.8.8'
    id 'idea'
    id 'application'
}

repositories {
    google()
    jcenter()
    mavenCentral()
    mavenLocal()
}

group 'ru.hse.spb'
version '1.0-SNAPSHOT'

def grpcVersion = '1.+'

dependencies {
    def kotlinVerion = plugins.findPlugin("org.jetbrains.kotlin.jvm").kotlinPluginVersion
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVerion}"
    compile "io.grpc:grpc-netty-shaded:${grpcVersion}"
    compile "io.grpc:grpc-protobuf:${grpcVersion}"
    compile "io.grpc:grpc-stub:${grpcVersion}"
    compileOnly "javax.annotation:javax.annotation-api:1.2"
    compile group: 'com.googlecode.lanterna', name: 'lanterna', version: '2.1.8'

    testImplementation "io.grpc:grpc-testing:${grpcVersion}" // gRCP testing utilities
    testImplementation "junit:junit:4.12"
    testImplementation "org.mockito:mockito-core:2.25.1"
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.1.0")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.1.0")
}

sourceSets {
    main.java.srcDirs += 'src/main/kotlin/'
    test.java.srcDirs += 'src/test/kotlin/'
}

protobuf {
    protoc { artifact = 'com.google.protobuf:protoc:3.7.1' }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

startScripts.enabled = false

task roguelikeServer(type: CreateStartScripts) {
    mainClassName = 'ru.hse.spb.server.RoguelikeServerApplicationKt'
    applicationName = 'roguelike-server'
    outputDir = new File(project.buildDir, 'tmp')
    classpath = startScripts.classpath
}

task roguelikeClient(type: CreateStartScripts) {
    mainClassName = 'ru.hse.spb.client.RoguelikeClientApplicationKt'
    applicationName = 'roguelike-client'
    outputDir = new File(project.buildDir, 'tmp')
    classpath = startScripts.classpath
}

task serverJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'ru.hse.spb.server.RoguelikeServerApplicationKt'
    }

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
    from sourceSets.main.allSource
    from sourceSets.main.output

    baseName = 'roguelike-server'
}

task clientJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'ru.hse.spb.client.RoguelikeClientApplicationKt'
    }

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
    from sourceSets.main.allSource
    from sourceSets.main.output

    baseName = 'roguelike-client'
}

applicationDistribution.into('bin') {
    from(roguelikeServer)
    from(roguelikeClient)
    fileMode = 0755
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
